# Find the LibConfig includes and library

FIND_PATH(LIBCONFIG_INCLUDE_DIR libconfig.h++
    /usr/local/include
    /usr/include
)

FIND_LIBRARY(LIBCONFIG_LIBRARY config++
    ${LIBCONFIG_INCLUDE_DIR}/../lib64
    /usr/local/lib64
    /usr/lib64)

FIND_LIBRARY(LIBCONFIG_DEBUG_LIBRARY config++
    ${LIBCONFIG_INCLUDE_DIR}/../lib64
        /usr/local/lib64}
        /usr/lib64)

IF (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARIES)
    SET(LIBCONFIG_FOUND TRUE)
ENDIF (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARIES)

IF (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARY)
    SET(LIBCONFIG_FOUND TRUE)
ENDIF (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARY)

IF (LIBCONFIG_FOUND)
    MESSAGE(STATUS "Found LIBCONFIG INCLUDE: ${LIBCONFIG_INCLUDE_DIR}")
    MESSAGE(STATUS "Found LIBCONFIG LIBRARY: ${LIBCONFIG_LIBRARY}")
    SET(LIBCONFIG_LIBRARIES ${LIBCONFIG_LIBRARY})
    SET(LIBCONFIG_DEBUG_LIBRARIES ${LIBCONFIG_DEBUG_LIBRARY})
ELSE (LIBCONFIG_FOUND)
    IF (LIBCONFIG_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "LIBCONFIG not found")
    ELSE (LIBCONFIG_FIND_REQUIRED)
        MESSAGE(STATUS "LIBCONFIG not found")
    ENDIF (LIBCONFIG_FIND_REQUIRED)
ENDIF (LIBCONFIG_FOUND)

MARK_AS_ADVANCED(LIBCONFIG_DEBUG_LIBRARY LIBCONFIG_INCLUDE_DIR LIBCONFIG_LIBRARY)
